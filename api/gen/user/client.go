// Code generated by goa v3.4.3, DO NOT EDIT.
//
// user client
//
// Command:
// $ goa gen github.com/mateeullahmalik/goa-demo/api/design

package user

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "user" service client.
type Client struct {
	ListUsersEndpoint  goa.Endpoint
	GetUserEndpoint    goa.Endpoint
	CreateUserEndpoint goa.Endpoint
	RemoveUserEndpoint goa.Endpoint
}

// NewClient initializes a "user" service client given the endpoints.
func NewClient(listUsers, getUser, createUser, removeUser goa.Endpoint) *Client {
	return &Client{
		ListUsersEndpoint:  listUsers,
		GetUserEndpoint:    getUser,
		CreateUserEndpoint: createUser,
		RemoveUserEndpoint: removeUser,
	}
}

// ListUsers calls the "listUsers" endpoint of the "user" service.
func (c *Client) ListUsers(ctx context.Context) (res UserCollection, err error) {
	var ires interface{}
	ires, err = c.ListUsersEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.(UserCollection), nil
}

// GetUser calls the "getUser" endpoint of the "user" service.
// GetUser may return the following errors:
//	- "not_found" (type *NotFound): User not found
//	- error: internal error
func (c *Client) GetUser(ctx context.Context, p *GetUserPayload) (res *User, err error) {
	var ires interface{}
	ires, err = c.GetUserEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*User), nil
}

// CreateUser calls the "createUser" endpoint of the "user" service.
func (c *Client) CreateUser(ctx context.Context, p *User) (res string, err error) {
	var ires interface{}
	ires, err = c.CreateUserEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}

// RemoveUser calls the "removeUser" endpoint of the "user" service.
// RemoveUser may return the following errors:
//	- "not_found" (type *NotFound): User not found
//	- error: internal error
func (c *Client) RemoveUser(ctx context.Context, p *RemoveUserPayload) (err error) {
	_, err = c.RemoveUserEndpoint(ctx, p)
	return
}

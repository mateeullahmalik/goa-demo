// Code generated by goa v3.4.3, DO NOT EDIT.
//
// user endpoints
//
// Command:
// $ goa gen github.com/mateeullahmalik/goa-demo/api/design

package user

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "user" service endpoints.
type Endpoints struct {
	ListUsers  goa.Endpoint
	GetUser    goa.Endpoint
	CreateUser goa.Endpoint
	RemoveUser goa.Endpoint
}

// NewEndpoints wraps the methods of the "user" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		ListUsers:  NewListUsersEndpoint(s),
		GetUser:    NewGetUserEndpoint(s),
		CreateUser: NewCreateUserEndpoint(s),
		RemoveUser: NewRemoveUserEndpoint(s),
	}
}

// Use applies the given middleware to all the "user" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.ListUsers = m(e.ListUsers)
	e.GetUser = m(e.GetUser)
	e.CreateUser = m(e.CreateUser)
	e.RemoveUser = m(e.RemoveUser)
}

// NewListUsersEndpoint returns an endpoint function that calls the method
// "listUsers" of service "user".
func NewListUsersEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		res, err := s.ListUsers(ctx)
		if err != nil {
			return nil, err
		}
		vres := NewViewedUserCollection(res, "tiny")
		return vres, nil
	}
}

// NewGetUserEndpoint returns an endpoint function that calls the method
// "getUser" of service "user".
func NewGetUserEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*GetUserPayload)
		res, view, err := s.GetUser(ctx, p)
		if err != nil {
			return nil, err
		}
		vres := NewViewedUser(res, view)
		return vres, nil
	}
}

// NewCreateUserEndpoint returns an endpoint function that calls the method
// "createUser" of service "user".
func NewCreateUserEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*User)
		return s.CreateUser(ctx, p)
	}
}

// NewRemoveUserEndpoint returns an endpoint function that calls the method
// "removeUser" of service "user".
func NewRemoveUserEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*RemoveUserPayload)
		return nil, s.RemoveUser(ctx, p)
	}
}

// Code generated by goa v3.4.3, DO NOT EDIT.
//
// loan HTTP client CLI support package
//
// Command:
// $ goa gen github.com/mateeullahmalik/goa-demo/api/design

package client

import (
	"fmt"
	"strconv"

	loan "github.com/mateeullahmalik/goa-demo/api/gen/loan"
	goa "goa.design/goa/v3/pkg"
)

// BuildGetLoanPayload builds the payload for the loan getLoan endpoint from
// CLI flags.
func BuildGetLoanPayload(loanGetLoanID string, loanGetLoanView string) (*loan.GetLoanPayload, error) {
	var err error
	var id int
	{
		var v int64
		v, err = strconv.ParseInt(loanGetLoanID, 10, 64)
		id = int(v)
		if err != nil {
			return nil, fmt.Errorf("invalid value for id, must be INT")
		}
	}
	var view string
	{
		if loanGetLoanView != "" {
			view = loanGetLoanView
			if !(view == "default" || view == "tiny") {
				err = goa.MergeErrors(err, goa.InvalidEnumValueError("view", view, []interface{}{"default", "tiny"}))
			}
			if err != nil {
				return nil, err
			}
		}
	}
	v := &loan.GetLoanPayload{}
	v.ID = id
	v.View = view

	return v, nil
}

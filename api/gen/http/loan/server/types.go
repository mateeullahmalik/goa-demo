// Code generated by goa v3.4.3, DO NOT EDIT.
//
// loan HTTP server types
//
// Command:
// $ goa gen github.com/mateeullahmalik/goa-demo/api/design

package server

import (
	loan "github.com/mateeullahmalik/goa-demo/api/gen/loan"
	loanviews "github.com/mateeullahmalik/goa-demo/api/gen/loan/views"
)

// LoanResponseTinyCollection is the type of the "loan" service "listLoans"
// endpoint HTTP response body.
type LoanResponseTinyCollection []*LoanResponseTiny

// GetLoanResponseBody is the type of the "loan" service "getLoan" endpoint
// HTTP response body.
type GetLoanResponseBody struct {
	// ID is the unique id of the loan
	ID int `form:"id" json:"id" xml:"id"`
	// Loan amount
	Amount float64 `form:"amount" json:"amount" xml:"amount"`
	// id of lender
	LenderID int `form:"lender_id" json:"lender_id" xml:"lender_id"`
	// id of borrower
	BorrowerID int `form:"borrower_id" json:"borrower_id" xml:"borrower_id"`
	// description
	Description *string `form:"description,omitempty" json:"description,omitempty" xml:"description,omitempty"`
	// Date on which the loan is supposed to be paid back
	PaybackDate *string `form:"payback_date,omitempty" json:"payback_date,omitempty" xml:"payback_date,omitempty"`
}

// GetLoanResponseBodyTiny is the type of the "loan" service "getLoan" endpoint
// HTTP response body.
type GetLoanResponseBodyTiny struct {
	// ID is the unique id of the loan
	ID int `form:"id" json:"id" xml:"id"`
	// Loan amount
	Amount float64 `form:"amount" json:"amount" xml:"amount"`
	// id of lender
	LenderID int `form:"lender_id" json:"lender_id" xml:"lender_id"`
	// id of borrower
	BorrowerID int `form:"borrower_id" json:"borrower_id" xml:"borrower_id"`
}

// GetLoanNotFoundResponseBody is the type of the "loan" service "getLoan"
// endpoint HTTP response body for the "not_found" error.
type GetLoanNotFoundResponseBody struct {
	// Message of error
	Message string `form:"message" json:"message" xml:"message"`
	// ID of missing resource
	ID string `form:"id" json:"id" xml:"id"`
}

// LoanResponseTiny is used to define fields on response body types.
type LoanResponseTiny struct {
	// ID is the unique id of the loan
	ID int `form:"id" json:"id" xml:"id"`
	// Loan amount
	Amount float64 `form:"amount" json:"amount" xml:"amount"`
	// id of lender
	LenderID int `form:"lender_id" json:"lender_id" xml:"lender_id"`
	// id of borrower
	BorrowerID int `form:"borrower_id" json:"borrower_id" xml:"borrower_id"`
}

// NewLoanResponseTinyCollection builds the HTTP response body from the result
// of the "listLoans" endpoint of the "loan" service.
func NewLoanResponseTinyCollection(res loanviews.LoanCollectionView) LoanResponseTinyCollection {
	body := make([]*LoanResponseTiny, len(res))
	for i, val := range res {
		body[i] = marshalLoanviewsLoanViewToLoanResponseTiny(val)
	}
	return body
}

// NewGetLoanResponseBody builds the HTTP response body from the result of the
// "getLoan" endpoint of the "loan" service.
func NewGetLoanResponseBody(res *loanviews.LoanView) *GetLoanResponseBody {
	body := &GetLoanResponseBody{
		ID:          *res.ID,
		Amount:      *res.Amount,
		LenderID:    *res.LenderID,
		BorrowerID:  *res.BorrowerID,
		Description: res.Description,
		PaybackDate: res.PaybackDate,
	}
	return body
}

// NewGetLoanResponseBodyTiny builds the HTTP response body from the result of
// the "getLoan" endpoint of the "loan" service.
func NewGetLoanResponseBodyTiny(res *loanviews.LoanView) *GetLoanResponseBodyTiny {
	body := &GetLoanResponseBodyTiny{
		ID:         *res.ID,
		Amount:     *res.Amount,
		LenderID:   *res.LenderID,
		BorrowerID: *res.BorrowerID,
	}
	return body
}

// NewGetLoanNotFoundResponseBody builds the HTTP response body from the result
// of the "getLoan" endpoint of the "loan" service.
func NewGetLoanNotFoundResponseBody(res *loan.NotFound) *GetLoanNotFoundResponseBody {
	body := &GetLoanNotFoundResponseBody{
		Message: res.Message,
		ID:      res.ID,
	}
	return body
}

// NewGetLoanPayload builds a loan service getLoan endpoint payload.
func NewGetLoanPayload(id int, view string) *loan.GetLoanPayload {
	v := &loan.GetLoanPayload{}
	v.ID = id
	v.View = view

	return v
}
